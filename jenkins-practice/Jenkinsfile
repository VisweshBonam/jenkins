pipeline {
    agent {
        label 'AGENT-1'  // run this job on the agent with label AGENT-1
    }
    environment {
        APP_ENV = 'dev' // setting an environment variable app_env with value 'dev'
        COURSE = "Jenkins"
    }

    options {
        timeout(time:30, unit:'MINUTES') // set a timeout of 30 minutes for the entire pipeline
        buildDiscarder(logRotator(numToKeepStr: '5')) // keep the last 5 builds, it will delete older builds < 5
        disableConcurrentBuilds() // disable concurrent builds, only one build can run at a time
        retry(3) // retry the pipeline up to 3 times if it fails
    }

    parameters {
        string(name: 'APP_ENV', defaultValue: 'Prod', description: 'Application Environment') // defining a string parameter with default value 'dev'
        choice(name: 'ENVIRONMENT', choices: ['dev', 'test', 'prod'], description: 'Select Environment') // defining a choice parameter with options dev, test, prod
        booleanParam(name: 'ENABLE_FEATURE', defaultValue: false, description: 'Enable Feature Flag') // defining a boolean parameter with default value true
        file(name: 'CONFIG_FILE', description: 'Configuration File') // defining a file parameter to upload a configuration file
    }

    stages {
        stage('Build') {
            steps {
                script{ // using script block to run a Groovy script
                   
                        echo 'Building..'
                        echo "The app_env is set to ${APP_ENV}"

                        echo "The app_env parameters is ${params.APP_ENV}"

                         // sh "..." (single command) using sh block to run a single shell command
                        // sh """...""" (multiple commands) using sh block to run shell commands
                        sh """
                           env
                        """

                       

                }
            }
        }
        stage('Test') {
            steps { // steps block contains the actual commands to be executed in this stage, we can include one or more steps in a stage
                echo 'Testing..'
            }
        }
        stage('Deploy') {
            input {
                message "Should we continue?"
                ok "Yes, we should."
                submitter "alice,bob"
                parameters {
                    string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
                }
            }

            steps {
                echo 'Deploying....'
                echo "Hello, ${params.PERSON}" // using the parameter defined in the input block
            }
        }
    }
    post {  // after all stages are completed, this block will run, regardless of the pipeline's success or failure, 
        always { // this block will always run
            echo 'I will always say Hello'
            deleteDir() // clean up the workspace
        }
        success { // this block will run only if the pipeline is successful
            echo 'Hello,I will run only if the pipeline is successful'
        }
        failure { // this block will run only if the pipeline fails
            echo 'Hello, this will run only if the pipeline fails'
        }
    }
    
}